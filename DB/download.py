import pandas as pd
from supabase import create_client

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
url = "https://euglbxqhkxtnvcbwffjb.supabase.co"
key = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImV1Z2xieHFoa3h0bnZjYndmZmpiIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ5OTAxNTYsImV4cCI6MjA2MDU2NjE1Nn0.RV9w_dAKF-n1CvITnrHOycDYlcOXiQqJrJmjsd7ha_A"
supabase = create_client(url, key)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∏
sources = supabase.table("sources").select("*").execute().data
print(f"üîó –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(sources)} –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤")

rows = []

for i, source in enumerate(sources):
    source_id = source["id"]
    source_url = source["url"]

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –æ—Ç–∑—ã–≤—ã –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫—É
    all_reviews = []
    start = 0
    batch_size = 1000
    while True:
        batch = supabase.table("reviews")\
            .select("*")\
            .eq("id_–∏—Å—Ç–æ—á–Ω–∏–∫–∞", source_id)\
            .range(start, start + batch_size - 1)\
            .execute().data
        if not batch:
            break
        all_reviews.extend(batch)
        start += batch_size
    clinic_id = all_reviews[0]["id_–∫–ª–∏–Ω–∏–∫–∏"]
    clinic_data = supabase.table("clinics").select("*").eq("id", clinic_id).execute().data
    if not clinic_data:
        continue
    clinic = clinic_data[0]
    for review in all_reviews:
        rows.append({
            "–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ—á–∫–∏": clinic["–Ω–∞–∑–≤–∞–Ω–∏–µ"],
            "–°—Å—ã–ª–∫–∞": source_url,
            "–û—Ç–∑—ã–≤": review["—Ç–µ–∫—Å—Ç_–æ—Ç–∑—ã–≤–∞"],
            "–û—Ü–µ–Ω–∫–∞": review["–æ—Ü–µ–Ω–∫–∞"],
            "–¢–∏–ø –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏": clinic["—Ç–∏–ø_–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏"]
        })

    print(f"‚úÖ {i + 1}/{len(sources)}: {source_url} ‚Üí {len(all_reviews)} –æ—Ç–∑—ã–≤–æ–≤")

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ CSV
df = pd.DataFrame(rows)
df.to_csv("–æ—Ç–∑—ã–≤—ã_–ø–æ_—Å—Å—ã–ª–∫–∞–º.csv", sep=";", index=False)
print(f"\nüéâ –ì–æ—Ç–æ–≤–æ! –í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫: {len(rows)}")
